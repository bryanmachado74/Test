@model Test.Entity.Encuentro

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ActualizarEncuentro</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <h3>Administrador</h3>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Encuentro</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.local, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.local)
            @Html.HiddenFor(model => model.local)
            @*@Html.EditorFor(model => model.local, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.local, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.visitante, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.visitante)
            @Html.HiddenFor(model => model.visitante)
            @*@Html.EditorFor(model => model.visitante, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.visitante, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.jugado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.jugado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.jugado, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Label("Pendiente")
            @Html.RadioButtonFor(model => model.estado, "Pendiente")
            @Html.Label("Finalizado")
            @Html.RadioButtonFor(model => model.estado, "Finalizado")
            @Html.ValidationMessageFor(model => model.jugado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.marcador_local, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.marcador_local, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.marcador_local, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.marcador_visitante, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.marcador_visitante, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.marcador_visitante, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.probabilidad_local, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.probabilidad_local, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.probabilidad_local, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.probabilidad_empate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.probabilidad_empate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.probabilidad_empate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.probabilidad_visita, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.probabilidad_visita, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.probabilidad_visita, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.jornada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.jornada)
            @Html.HiddenFor(model => model.jornada)
            @*@Html.EditorFor(model => model.jornada, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.jornada, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div class="row">
        <p class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
            @Html.ActionLink("Cancelar", "ListarEncuentrosAdmin")
        </p>

        @if (TempData["success"] != null)
        {
            if (TempData["success"].Equals("false"))
            {
                <span class="text-danger h5 col-lg-6 col-md-6 col-sm-6 col-xs-6">@TempData["msj"]</span>
            }

        }
    </div>
</body>
</html>
